{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","React","memo","tabs","selectedTabId","onTabSelected","currentTab","onTabFinder","className","map","tab","id","title","classNames","href","onClick","content","App","useState","setSelectedTabId","currentTabFinder","arrOfTabs","indexOfCurrTab","find","ReactDOM","render","document","getElementById"],"mappings":"2NAWaA,EAAuBC,IAAMC,MACxC,YAKO,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,cAGMC,GAAaC,EADf,EADJA,aAE+BJ,EAAMC,GAErC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKI,UAAU,gBAAf,SACE,6BACGL,EAAKM,KAAI,SAAAC,GACR,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MAEZ,OACE,oBAEE,UAAQ,MACRJ,UAAWK,IAAW,CAAE,YAAaP,EAAWK,KAAOA,IAHzD,SAKE,mBACEG,KAAI,WAAMH,GACV,UAAQ,UACRI,QAAS,kBAAMT,EAAWK,KAAOD,EAAIC,IAChCN,EAAcK,IAJrB,SAMGE,KAVED,UAkBf,qBAAKH,UAAU,QAAQ,UAAQ,aAA/B,SACGF,EAAWU,gBCzCTb,EAAO,CAClB,CAAEQ,GAAI,QAASC,MAAO,QAASI,QAAS,eACxC,CAAEL,GAAI,QAASC,MAAO,QAASI,QAAS,eACxC,CAAEL,GAAI,QAASC,MAAO,QAASI,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAS,SAAnD,mBAAOd,EAAP,KAAsBe,EAAtB,KAEMC,EAAmB,SAACC,EAAkBC,GAC1C,OAAOD,EACJE,MAAK,SAACb,GAAD,OAAcA,EAAIC,KAAOW,MAAmBD,EAAU,IAG1Df,EAAac,EAAiBjB,EAAMC,GAM1C,OACE,sBAAKI,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBF,EAAWM,SAGjC,cAACZ,EAAD,CACEG,KAAMA,EACNC,cAAeA,EACfC,cAboB,SAACK,GACzBS,EAAiBT,EAAIC,KAajBJ,YAAaa,QClCrBI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0d022e38.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n  onTabFinder: (arrOfTabs: Tab[], indexOfCurrTab: string) => Tab,\n};\n\nexport const Tabs:React.FC<Props> = React.memo(\n  ({\n    tabs,\n    selectedTabId,\n    onTabSelected,\n    onTabFinder,\n  }) => {\n    const currentTab = onTabFinder(tabs, selectedTabId);\n\n    return (\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => {\n              const { id, title } = tab;\n\n              return (\n                <li\n                  key={id}\n                  data-cy=\"Tab\"\n                  className={classNames({ 'is-active': currentTab.id === id })}\n                >\n                  <a\n                    href={`#${id}`}\n                    data-cy=\"TabLink\"\n                    onClick={() => currentTab.id !== tab.id\n                      && onTabSelected(tab)}\n                  >\n                    {title}\n                  </a>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {currentTab.content}\n        </div>\n      </div>\n    );\n  },\n);\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const currentTabFinder = (arrOfTabs: Tab[], indexOfCurrTab: string): Tab => {\n    return arrOfTabs\n      .find((tab: Tab) => tab.id === indexOfCurrTab) || arrOfTabs[0];\n  };\n\n  const currentTab = currentTabFinder(tabs, selectedTabId);\n\n  const handleTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${currentTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelected}\n        onTabFinder={currentTabFinder}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}