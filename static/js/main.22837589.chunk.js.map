{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","React","memo","tabs","selectedTabId","onTabSelected","currentTab","find","tab","id","className","map","title","classNames","href","onClick","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"2NAeaA,EAAuBC,IAAMC,MACxC,YAIO,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAaH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEtE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MAEZ,OACE,oBAEE,UAAQ,MACRF,UAAWG,IAAW,CAAE,YAAaT,IAAkBK,IAHzD,SAKE,mBAAGK,KAAI,WAAML,GAAM,UAAQ,UAAUM,QAAS,kBAAMT,IAAeE,GAAOH,EAAcI,IAAxF,SACGG,KALEH,UAaf,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAWU,gBCxCTb,EAAO,CAClB,CAAEM,GAAI,QAASG,MAAO,QAASI,QAAS,eACxC,CAAEP,GAAI,QAASG,MAAO,QAASI,QAAS,eACxC,CAAEP,GAAI,QAASG,MAAO,QAASI,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAS,SAAnD,mBAAOd,EAAP,KAAsBe,EAAtB,KAEMb,EAAaH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAUtE,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAWM,SAGjC,cAACZ,EAAD,CACEG,KAAMA,EACNC,cAAeA,EACfC,cAjBgB,SAACI,GACjBN,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOA,KAC9BU,EAAiBV,GAEjBU,EAAiBhB,EAAK,GAAGM,WClB/BW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.22837589.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (id: string) => void,\n};\n\nexport const Tabs:React.FC<Props> = React.memo(\n  ({\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  }) => {\n    const currentTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n    return (\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => {\n              const { id, title } = tab;\n\n              return (\n                <li\n                  key={id}\n                  data-cy=\"Tab\"\n                  className={classNames({ 'is-active': selectedTabId === id })}\n                >\n                  <a href={`#${id}`} data-cy=\"TabLink\" onClick={() => currentTab !== tab && onTabSelected(id)}>\n                    {title}\n                  </a>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {currentTab.content}\n        </div>\n      </div>\n    );\n  },\n);\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const currentTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const onTabSelected = (id: string) => {\n    if (tabs.find(tab => tab.id === id)) {\n      setSelectedTabId(id);\n    } else {\n      setSelectedTabId(tabs[0].id);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${currentTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}